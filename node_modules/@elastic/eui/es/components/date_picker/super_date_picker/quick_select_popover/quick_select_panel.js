var _excluded = ["component", "title", "titleId", "children"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import React from 'react';
import PropTypes from "prop-types";
import { useEuiMemoizedStyles } from '../../../../services';
import { EuiTitle } from '../../../title';
import { euiQuickSelectPanelStyles } from './quick_select_panel.styles';
import { jsx as ___EmotionJSX } from "@emotion/react";
export var EuiQuickSelectPanel = function EuiQuickSelectPanel(_ref) {
  var _ref$component = _ref.component,
    Component = _ref$component === void 0 ? 'div' : _ref$component,
    title = _ref.title,
    titleId = _ref.titleId,
    children = _ref.children,
    rest = _objectWithoutProperties(_ref, _excluded);
  var isFieldset = Component === 'fieldset';
  var TitleComponent = isFieldset ? 'legend' : 'span';
  var styles = useEuiMemoizedStyles(euiQuickSelectPanelStyles);
  return ___EmotionJSX(Component, _extends({
    css: styles.euiQuickSelectPanel
  }, rest), title ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(EuiTitle, {
    size: "xxxs"
  }, ___EmotionJSX(TitleComponent, {
    id: titleId,
    css: styles.euiQuickSelectPanel__title
  }, title)), ___EmotionJSX("div", {
    css: styles.euiQuickSelectPanel__section
  }, children)) : children);
};
EuiQuickSelectPanel.propTypes = {
  className: PropTypes.string,
  "aria-label": PropTypes.string,
  "data-test-subj": PropTypes.string,
  css: PropTypes.any,
  component: PropTypes.oneOf(["div", "fieldset"]),
  title: PropTypes.node,
  titleId: PropTypes.string,
  children: PropTypes.node
};