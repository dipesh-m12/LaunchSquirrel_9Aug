function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
import { css as _css } from "@emotion/react";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import React from 'react';
import { useEuiTheme } from '../../services';
import { logicalStyle } from '../../global_styling';
import { jsx as ___EmotionJSX } from "@emotion/react";
/**
 * DRY util for rendering an option with its prepend and append properties
 */
export var EuiComboBoxOptionAppendPrepend = function EuiComboBoxOptionAppendPrepend(_ref) {
  var children = _ref.children,
    option = _ref.option,
    classNamePrefix = _ref.classNamePrefix,
    _ref$marginSize = _ref.marginSize,
    marginSize = _ref$marginSize === void 0 ? 'xs' : _ref$marginSize;
  var _useEuiTheme = useEuiTheme(),
    euiTheme = _useEuiTheme.euiTheme;
  var margin = euiTheme.size[marginSize];
  return ___EmotionJSX(React.Fragment, null, (option === null || option === void 0 ? void 0 : option.prepend) && ___EmotionJSX("span", {
    className: "".concat(classNamePrefix, "__prepend"),
    css: /*#__PURE__*/_css(_objectSpread(_objectSpread({}, logicalStyle('margin-right', margin)), centerIcons), ";label:EuiComboBoxOptionAppendPrepend;")
  }, option.prepend), children, (option === null || option === void 0 ? void 0 : option.append) && ___EmotionJSX("span", {
    className: "".concat(classNamePrefix, "__append"),
    css: /*#__PURE__*/_css(_objectSpread(_objectSpread({}, logicalStyle('margin-left', margin)), centerIcons), ";label:EuiComboBoxOptionAppendPrepend;")
  }, option.append));
};

// Fix vertical alignment of EuiIcons in prepend/append nodes
var centerIcons = {
  '.euiIcon': {
    display: 'block'
  }
};