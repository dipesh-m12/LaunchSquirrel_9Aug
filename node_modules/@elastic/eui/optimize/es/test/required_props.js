function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import { css } from '@emotion/react';

// Using a variable name instead of inline causes Emotion to use `euiTestCss`
// instead of the component name, which is easier to find in snapshots
var euiTestCss = process.env.NODE_ENV === "production" ? {
  name: "hzx95w-euiTestCss",
  styles: "color:red;label:euiTestCss;"
} : {
  name: "hzx95w-euiTestCss",
  styles: "color:red;label:euiTestCss;",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

// We expect all React components to be able to support these props,
// which will be rendered as HTML attributes.
export var requiredProps = {
  'aria-label': 'aria-label',
  className: 'testClass1 testClass2',
  'data-test-subj': 'test subject string',
  css: euiTestCss
};