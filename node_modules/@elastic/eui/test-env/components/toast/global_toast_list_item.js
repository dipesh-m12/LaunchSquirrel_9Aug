"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiGlobalToastListItem = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _services = require("../../services");
var _global_toast_list = require("./global_toast_list.styles");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
var EuiGlobalToastListItem = exports.EuiGlobalToastListItem = function EuiGlobalToastListItem(_ref) {
  var children = _ref.children,
    className = _ref.className,
    isDismissed = _ref.isDismissed;
  var euiTheme = (0, _services.useEuiTheme)();
  if (!children) {
    return null;
  }
  var styles = (0, _global_toast_list.euiGlobalToastListItemStyles)(euiTheme);
  var cssStyles = [styles.euiGlobalToastListItem, isDismissed && styles.dismissed];
  var classes = (0, _classnames.default)('euiGlobalToastListItem', children.props.className, className);
  return (0, _services.cloneElementWithCss)(children, _objectSpread(_objectSpread({}, children.props), {
    className: classes,
    css: cssStyles
  }));
};
EuiGlobalToastListItem.propTypes = {
  isDismissed: _propTypes.default.bool,
  /**
     * ReactElement to render as this component's content
     */
  children: _propTypes.default.element,
  className: _propTypes.default.string,
  "aria-label": _propTypes.default.string,
  "data-test-subj": _propTypes.default.string,
  css: _propTypes.default.any
};